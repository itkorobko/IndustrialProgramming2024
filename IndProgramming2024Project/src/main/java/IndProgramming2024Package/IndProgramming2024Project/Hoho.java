// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: hoho.proto
// Protobuf Java Version: 4.28.3

package IndProgramming2024Package.IndProgramming2024Project;

public final class Hoho {
  private Hoho() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 28,
      /* patch= */ 3,
      /* suffix= */ "",
      Hoho.class.getName());
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ExpressionsAndResultsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:IndProgramming2024Package.IndProgramming2024Project.ExpressionsAndResults)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>map&lt;string, double&gt; vars_and_values = 1;</code>
     */
    int getVarsAndValuesCount();
    /**
     * <code>map&lt;string, double&gt; vars_and_values = 1;</code>
     */
    boolean containsVarsAndValues(
        java.lang.String key);
    /**
     * Use {@link #getVarsAndValuesMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.Double>
    getVarsAndValues();
    /**
     * <code>map&lt;string, double&gt; vars_and_values = 1;</code>
     */
    java.util.Map<java.lang.String, java.lang.Double>
    getVarsAndValuesMap();
    /**
     * <code>map&lt;string, double&gt; vars_and_values = 1;</code>
     */
    double getVarsAndValuesOrDefault(
        java.lang.String key,
        double defaultValue);
    /**
     * <code>map&lt;string, double&gt; vars_and_values = 1;</code>
     */
    double getVarsAndValuesOrThrow(
        java.lang.String key);
  }
  /**
   * Protobuf type {@code IndProgramming2024Package.IndProgramming2024Project.ExpressionsAndResults}
   */
  public static final class ExpressionsAndResults extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:IndProgramming2024Package.IndProgramming2024Project.ExpressionsAndResults)
      ExpressionsAndResultsOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 3,
        /* suffix= */ "",
        ExpressionsAndResults.class.getName());
    }
    // Use ExpressionsAndResults.newBuilder() to construct.
    private ExpressionsAndResults(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private ExpressionsAndResults() {
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return IndProgramming2024Package.IndProgramming2024Project.Hoho.internal_static_IndProgramming2024Package_IndProgramming2024Project_ExpressionsAndResults_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapFieldReflectionAccessor internalGetMapFieldReflection(
        int number) {
      switch (number) {
        case 1:
          return internalGetVarsAndValues();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return IndProgramming2024Package.IndProgramming2024Project.Hoho.internal_static_IndProgramming2024Package_IndProgramming2024Project_ExpressionsAndResults_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              IndProgramming2024Package.IndProgramming2024Project.Hoho.ExpressionsAndResults.class, IndProgramming2024Package.IndProgramming2024Project.Hoho.ExpressionsAndResults.Builder.class);
    }

    public static final int VARS_AND_VALUES_FIELD_NUMBER = 1;
    private static final class VarsAndValuesDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.Double> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.Double>newDefaultInstance(
                  IndProgramming2024Package.IndProgramming2024Project.Hoho.internal_static_IndProgramming2024Package_IndProgramming2024Project_ExpressionsAndResults_VarsAndValuesEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.DOUBLE,
                  0D);
    }
    @SuppressWarnings("serial")
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.Double> varsAndValues_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.Double>
    internalGetVarsAndValues() {
      if (varsAndValues_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            VarsAndValuesDefaultEntryHolder.defaultEntry);
      }
      return varsAndValues_;
    }
    public int getVarsAndValuesCount() {
      return internalGetVarsAndValues().getMap().size();
    }
    /**
     * <code>map&lt;string, double&gt; vars_and_values = 1;</code>
     */
    @java.lang.Override
    public boolean containsVarsAndValues(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetVarsAndValues().getMap().containsKey(key);
    }
    /**
     * Use {@link #getVarsAndValuesMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Double> getVarsAndValues() {
      return getVarsAndValuesMap();
    }
    /**
     * <code>map&lt;string, double&gt; vars_and_values = 1;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, java.lang.Double> getVarsAndValuesMap() {
      return internalGetVarsAndValues().getMap();
    }
    /**
     * <code>map&lt;string, double&gt; vars_and_values = 1;</code>
     */
    @java.lang.Override
    public double getVarsAndValuesOrDefault(
        java.lang.String key,
        double defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.Double> map =
          internalGetVarsAndValues().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, double&gt; vars_and_values = 1;</code>
     */
    @java.lang.Override
    public double getVarsAndValuesOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.Double> map =
          internalGetVarsAndValues().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      com.google.protobuf.GeneratedMessage
        .serializeStringMapTo(
          output,
          internalGetVarsAndValues(),
          VarsAndValuesDefaultEntryHolder.defaultEntry,
          1);
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (java.util.Map.Entry<java.lang.String, java.lang.Double> entry
           : internalGetVarsAndValues().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.Double>
        varsAndValues__ = VarsAndValuesDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, varsAndValues__);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof IndProgramming2024Package.IndProgramming2024Project.Hoho.ExpressionsAndResults)) {
        return super.equals(obj);
      }
      IndProgramming2024Package.IndProgramming2024Project.Hoho.ExpressionsAndResults other = (IndProgramming2024Package.IndProgramming2024Project.Hoho.ExpressionsAndResults) obj;

      if (!internalGetVarsAndValues().equals(
          other.internalGetVarsAndValues())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (!internalGetVarsAndValues().getMap().isEmpty()) {
        hash = (37 * hash) + VARS_AND_VALUES_FIELD_NUMBER;
        hash = (53 * hash) + internalGetVarsAndValues().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static IndProgramming2024Package.IndProgramming2024Project.Hoho.ExpressionsAndResults parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static IndProgramming2024Package.IndProgramming2024Project.Hoho.ExpressionsAndResults parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static IndProgramming2024Package.IndProgramming2024Project.Hoho.ExpressionsAndResults parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static IndProgramming2024Package.IndProgramming2024Project.Hoho.ExpressionsAndResults parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static IndProgramming2024Package.IndProgramming2024Project.Hoho.ExpressionsAndResults parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static IndProgramming2024Package.IndProgramming2024Project.Hoho.ExpressionsAndResults parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static IndProgramming2024Package.IndProgramming2024Project.Hoho.ExpressionsAndResults parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static IndProgramming2024Package.IndProgramming2024Project.Hoho.ExpressionsAndResults parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static IndProgramming2024Package.IndProgramming2024Project.Hoho.ExpressionsAndResults parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static IndProgramming2024Package.IndProgramming2024Project.Hoho.ExpressionsAndResults parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static IndProgramming2024Package.IndProgramming2024Project.Hoho.ExpressionsAndResults parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static IndProgramming2024Package.IndProgramming2024Project.Hoho.ExpressionsAndResults parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(IndProgramming2024Package.IndProgramming2024Project.Hoho.ExpressionsAndResults prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code IndProgramming2024Package.IndProgramming2024Project.ExpressionsAndResults}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:IndProgramming2024Package.IndProgramming2024Project.ExpressionsAndResults)
        IndProgramming2024Package.IndProgramming2024Project.Hoho.ExpressionsAndResultsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return IndProgramming2024Package.IndProgramming2024Project.Hoho.internal_static_IndProgramming2024Package_IndProgramming2024Project_ExpressionsAndResults_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapFieldReflectionAccessor internalGetMapFieldReflection(
          int number) {
        switch (number) {
          case 1:
            return internalGetVarsAndValues();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapFieldReflectionAccessor internalGetMutableMapFieldReflection(
          int number) {
        switch (number) {
          case 1:
            return internalGetMutableVarsAndValues();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return IndProgramming2024Package.IndProgramming2024Project.Hoho.internal_static_IndProgramming2024Package_IndProgramming2024Project_ExpressionsAndResults_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                IndProgramming2024Package.IndProgramming2024Project.Hoho.ExpressionsAndResults.class, IndProgramming2024Package.IndProgramming2024Project.Hoho.ExpressionsAndResults.Builder.class);
      }

      // Construct using IndProgramming2024Package.IndProgramming2024Project.Hoho.ExpressionsAndResults.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        internalGetMutableVarsAndValues().clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return IndProgramming2024Package.IndProgramming2024Project.Hoho.internal_static_IndProgramming2024Package_IndProgramming2024Project_ExpressionsAndResults_descriptor;
      }

      @java.lang.Override
      public IndProgramming2024Package.IndProgramming2024Project.Hoho.ExpressionsAndResults getDefaultInstanceForType() {
        return IndProgramming2024Package.IndProgramming2024Project.Hoho.ExpressionsAndResults.getDefaultInstance();
      }

      @java.lang.Override
      public IndProgramming2024Package.IndProgramming2024Project.Hoho.ExpressionsAndResults build() {
        IndProgramming2024Package.IndProgramming2024Project.Hoho.ExpressionsAndResults result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public IndProgramming2024Package.IndProgramming2024Project.Hoho.ExpressionsAndResults buildPartial() {
        IndProgramming2024Package.IndProgramming2024Project.Hoho.ExpressionsAndResults result = new IndProgramming2024Package.IndProgramming2024Project.Hoho.ExpressionsAndResults(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(IndProgramming2024Package.IndProgramming2024Project.Hoho.ExpressionsAndResults result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.varsAndValues_ = internalGetVarsAndValues();
          result.varsAndValues_.makeImmutable();
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof IndProgramming2024Package.IndProgramming2024Project.Hoho.ExpressionsAndResults) {
          return mergeFrom((IndProgramming2024Package.IndProgramming2024Project.Hoho.ExpressionsAndResults)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(IndProgramming2024Package.IndProgramming2024Project.Hoho.ExpressionsAndResults other) {
        if (other == IndProgramming2024Package.IndProgramming2024Project.Hoho.ExpressionsAndResults.getDefaultInstance()) return this;
        internalGetMutableVarsAndValues().mergeFrom(
            other.internalGetVarsAndValues());
        bitField0_ |= 0x00000001;
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.google.protobuf.MapEntry<java.lang.String, java.lang.Double>
                varsAndValues__ = input.readMessage(
                    VarsAndValuesDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                internalGetMutableVarsAndValues().getMutableMap().put(
                    varsAndValues__.getKey(), varsAndValues__.getValue());
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.Double> varsAndValues_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.Double>
          internalGetVarsAndValues() {
        if (varsAndValues_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              VarsAndValuesDefaultEntryHolder.defaultEntry);
        }
        return varsAndValues_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.Double>
          internalGetMutableVarsAndValues() {
        if (varsAndValues_ == null) {
          varsAndValues_ = com.google.protobuf.MapField.newMapField(
              VarsAndValuesDefaultEntryHolder.defaultEntry);
        }
        if (!varsAndValues_.isMutable()) {
          varsAndValues_ = varsAndValues_.copy();
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return varsAndValues_;
      }
      public int getVarsAndValuesCount() {
        return internalGetVarsAndValues().getMap().size();
      }
      /**
       * <code>map&lt;string, double&gt; vars_and_values = 1;</code>
       */
      @java.lang.Override
      public boolean containsVarsAndValues(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        return internalGetVarsAndValues().getMap().containsKey(key);
      }
      /**
       * Use {@link #getVarsAndValuesMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Double> getVarsAndValues() {
        return getVarsAndValuesMap();
      }
      /**
       * <code>map&lt;string, double&gt; vars_and_values = 1;</code>
       */
      @java.lang.Override
      public java.util.Map<java.lang.String, java.lang.Double> getVarsAndValuesMap() {
        return internalGetVarsAndValues().getMap();
      }
      /**
       * <code>map&lt;string, double&gt; vars_and_values = 1;</code>
       */
      @java.lang.Override
      public double getVarsAndValuesOrDefault(
          java.lang.String key,
          double defaultValue) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, java.lang.Double> map =
            internalGetVarsAndValues().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, double&gt; vars_and_values = 1;</code>
       */
      @java.lang.Override
      public double getVarsAndValuesOrThrow(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, java.lang.Double> map =
            internalGetVarsAndValues().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }
      public Builder clearVarsAndValues() {
        bitField0_ = (bitField0_ & ~0x00000001);
        internalGetMutableVarsAndValues().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;string, double&gt; vars_and_values = 1;</code>
       */
      public Builder removeVarsAndValues(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        internalGetMutableVarsAndValues().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Double>
          getMutableVarsAndValues() {
        bitField0_ |= 0x00000001;
        return internalGetMutableVarsAndValues().getMutableMap();
      }
      /**
       * <code>map&lt;string, double&gt; vars_and_values = 1;</code>
       */
      public Builder putVarsAndValues(
          java.lang.String key,
          double value) {
        if (key == null) { throw new NullPointerException("map key"); }

        internalGetMutableVarsAndValues().getMutableMap()
            .put(key, value);
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>map&lt;string, double&gt; vars_and_values = 1;</code>
       */
      public Builder putAllVarsAndValues(
          java.util.Map<java.lang.String, java.lang.Double> values) {
        internalGetMutableVarsAndValues().getMutableMap()
            .putAll(values);
        bitField0_ |= 0x00000001;
        return this;
      }

      // @@protoc_insertion_point(builder_scope:IndProgramming2024Package.IndProgramming2024Project.ExpressionsAndResults)
    }

    // @@protoc_insertion_point(class_scope:IndProgramming2024Package.IndProgramming2024Project.ExpressionsAndResults)
    private static final IndProgramming2024Package.IndProgramming2024Project.Hoho.ExpressionsAndResults DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new IndProgramming2024Package.IndProgramming2024Project.Hoho.ExpressionsAndResults();
    }

    public static IndProgramming2024Package.IndProgramming2024Project.Hoho.ExpressionsAndResults getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ExpressionsAndResults>
        PARSER = new com.google.protobuf.AbstractParser<ExpressionsAndResults>() {
      @java.lang.Override
      public ExpressionsAndResults parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<ExpressionsAndResults> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ExpressionsAndResults> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public IndProgramming2024Package.IndProgramming2024Project.Hoho.ExpressionsAndResults getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_IndProgramming2024Package_IndProgramming2024Project_ExpressionsAndResults_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_IndProgramming2024Package_IndProgramming2024Project_ExpressionsAndResults_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_IndProgramming2024Package_IndProgramming2024Project_ExpressionsAndResults_VarsAndValuesEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_IndProgramming2024Package_IndProgramming2024Project_ExpressionsAndResults_VarsAndValuesEntry_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\nhoho.proto\0223IndProgramming2024Package." +
      "IndProgramming2024Project\"\305\001\n\025Expression" +
      "sAndResults\022v\n\017vars_and_values\030\001 \003(\0132].I" +
      "ndProgramming2024Package.IndProgramming2" +
      "024Project.ExpressionsAndResults.VarsAnd" +
      "ValuesEntry\0324\n\022VarsAndValuesEntry\022\013\n\003key" +
      "\030\001 \001(\t\022\r\n\005value\030\002 \001(\001:\0028\001b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_IndProgramming2024Package_IndProgramming2024Project_ExpressionsAndResults_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_IndProgramming2024Package_IndProgramming2024Project_ExpressionsAndResults_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_IndProgramming2024Package_IndProgramming2024Project_ExpressionsAndResults_descriptor,
        new java.lang.String[] { "VarsAndValues", });
    internal_static_IndProgramming2024Package_IndProgramming2024Project_ExpressionsAndResults_VarsAndValuesEntry_descriptor =
      internal_static_IndProgramming2024Package_IndProgramming2024Project_ExpressionsAndResults_descriptor.getNestedTypes().get(0);
    internal_static_IndProgramming2024Package_IndProgramming2024Project_ExpressionsAndResults_VarsAndValuesEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_IndProgramming2024Package_IndProgramming2024Project_ExpressionsAndResults_VarsAndValuesEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    descriptor.resolveAllFeaturesImmutable();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
